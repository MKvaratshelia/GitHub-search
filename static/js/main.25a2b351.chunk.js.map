{"version":3,"sources":["components/NavBar.js","context/alert/alertContext.js","context/gitHub/githubContext.js","components/Search.js","components/Card.js","pages/Home.js","pages/About.js","components/Repos.js","pages/Profile.js","components/Alert.js","context/alert/alertReducer.js","context/types.js","context/alert/alertState.js","context/gitHub/githubReducer.js","context/gitHub/GithubState.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","exact","to","AlertContext","createContext","GithubContext","Search","useState","value","setValue","alert","useContext","github","type","placeholder","onKeyPress","event","key","clearUsers","trim","hide","search","show","onChange","target","Card","user","src","avatar_url","alt","login","Home","loading","users","map","id","About","Repos","repos","Fragment","repo","href","html_url","rel","name","Profile","match","getUser","getRepos","urlName","params","useEffect","company","location","bio","blog","followers","public_repos","public_gists","following","style","width","Alert","role","text","aria-label","onClick","aria-hidden","handlers","state","action","payload","alertReducer","DEFAULT","AlertState","children","useReducer","dispatch","Provider","githubReducer","withCreds","url","process","GithubState","a","setLoading","axios","response","data","items","App","path","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.25a2b351.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const NavBar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-primary navbar-expand-lg\">\r\n      <div className=\"navbar-brand\">GitHub Поиск</div>\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item\">\r\n          <NavLink exact to=\"/\" className=\"nav-link\">\r\n            Главная\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"/about\" className=\"nav-link\">\r\n            Информация\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const AlertContext = createContext();\r\n","import { createContext } from \"react\";\r\n\r\nexport const GithubContext = createContext();\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\nimport { GithubContext } from \"../context/gitHub/githubContext\";\r\n\r\nexport const Search = () => {\r\n  const [value, setValue] = useState(\"\");\r\n  const alert = useContext(AlertContext);\r\n  const github = useContext(GithubContext);\r\n\r\n  const onSubmit = (event) => {\r\n    if (event.key !== \"Enter\") {\r\n      return;\r\n    }\r\n\r\n    github.clearUsers();\r\n\r\n    if (value.trim()) {\r\n      alert.hide();\r\n      github.search(value.trim());\r\n    } else {\r\n      alert.show(\"Ведите данные пользователя\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Введите ник пользователя\"\r\n        onKeyPress={onSubmit}\r\n        value={value}\r\n        onChange={(event) => setValue(event.target.value)}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Card = ({ user }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={user.avatar_url} alt={user.login} className=\"card-img-top\" />\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{user.login}</h5>\r\n        <Link to={`/profile/` + user.login} className=\"btn btn-primary\">\r\n          Открыть\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { Search } from \"../components/Search\";\r\nimport { Card } from \"../components/Card\";\r\nimport { GithubContext } from \"../context/gitHub/githubContext\";\r\n\r\nexport const Home = () => {\r\n  const { loading, users } = useContext(GithubContext);\r\n  return (\r\n    <Fragment>\r\n      <Search />\r\n      <div className=\"row\">\r\n        {loading ? (\r\n          <p className=\"text-center\">Загрузка...</p>\r\n        ) : (\r\n          users.map((user) => {\r\n            return (\r\n              <div className=\"col-sm-4 mb-4\" key={user.id}>\r\n                <Card user={user} />\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div className=\"jumbotron jumbotron-fluid\">\r\n      <div className=\"container\">\r\n        <h1 className=\"display-4\">Информация</h1>\r\n        <p className=\"lead\">V 1.0.0</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Repos = ({ repos }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {repos.map((repo) => (\r\n        <div className=\"card mb-3\" key={repo.id}>\r\n          <div className=\"card-body\">\r\n            <h5>\r\n              <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {repo.name}\r\n              </a>\r\n            </h5>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, Fragment } from \"react\";\r\nimport { GithubContext } from \"../context/gitHub/githubContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Repos } from \"../components/Repos\";\r\n\r\nexport const Profile = ({ match }) => {\r\n  const { getUser, getRepos, loading, user, repos } = useContext(GithubContext);\r\n  const urlName = match.params.name;\r\n\r\n  useEffect(() => {\r\n    getUser(urlName);\r\n    getRepos(urlName);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p className=\"text-center\">Загрузка...</p>;\r\n  }\r\n\r\n  const {\r\n    name,\r\n    company,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    blog,\r\n    login,\r\n    html_url,\r\n    followers,\r\n    public_repos,\r\n    public_gists,\r\n    following,\r\n  } = user;\r\n  return (\r\n    <Fragment>\r\n      <Link to=\"/\" className=\"btn btn-link\">\r\n        На главную\r\n      </Link>\r\n\r\n      <div className=\"card mb-4\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-3 text-center\">\r\n              <img src={avatar_url} alt={name} style={{ width: \"150px\" }}></img>\r\n              <h1>{name}</h1>\r\n              {location && <p>местоположение: {location}</p>}\r\n            </div>\r\n            <div className=\"col\">\r\n              {bio && (\r\n                <Fragment>\r\n                  <h3>BIO</h3>\r\n                  <p>{bio}</p>\r\n                </Fragment>\r\n              )}\r\n              <a\r\n                href={html_url}\r\n                className=\"btn btn-dark\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n              >\r\n                Открыть профиль\r\n              </a>\r\n              <ul>\r\n                {login && (\r\n                  <li>\r\n                    <strong>Username:</strong> {login}\r\n                  </li>\r\n                )}\r\n                {company && (\r\n                  <li>\r\n                    <strong>Компания:</strong> {company}\r\n                  </li>\r\n                )}\r\n                {blog && (\r\n                  <li>\r\n                    <strong>Website:</strong> {blog}\r\n                  </li>\r\n                )}\r\n              </ul>\r\n              <div className=\"badge badge-primary\">Подписчики: {followers}</div>\r\n              <div className=\"badge badge-success\">Подписан: {following}</div>\r\n              <div className=\"badge badge-info\">\r\n                Репозитории: {public_repos}\r\n              </div>\r\n              <div className=\"badge badge-dark\">Gists: {public_gists}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Repos repos={repos} />\r\n    </Fragment>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AlertContext } from \"../context/alert/alertContext\";\r\n\r\nexport const Alert = () => {\r\n  const { alert, hide } = useContext(AlertContext);\r\n\r\n  if (!alert) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div\r\n      className={`alert alert-${alert.type || \"secondary\"} alert-dismissible`}\r\n      role=\"alert\"\r\n    >\r\n      {alert.text}\r\n      <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={hide}>\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { SHOW_ALERT, HIDE_ALERT } from \"../types\";\r\n\r\nconst handlers = {\r\n  [SHOW_ALERT]: (state, action) => action.payload,\r\n  [HIDE_ALERT]: () => null,\r\n  DEFAULT: (state) => state,\r\n};\r\n\r\nexport const alertReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action);\r\n};\r\n","export const SHOW_ALERT = \"SHOW_ALERT\";\r\nexport const HIDE_ALERT = \"HIDE_ALERT\";\r\nexport const CLEAR_USERS = \"CLEAR_USERS\";\r\nexport const GET_REPOS = \"GET_REPOS\";\r\nexport const GET_USER = \"GET_USER\";\r\nexport const SEARCH_USERS = \"SEARCH_USERS\";\r\nexport const SET_LOADING = \"SET_LOADING\";\r\n","import React, { useReducer } from \"react\";\r\nimport { AlertContext } from \"./alertContext\";\r\nimport { alertReducer } from \"./alertReducer\";\r\nimport { HIDE_ALERT, SHOW_ALERT } from \"../types\";\r\n\r\nexport const AlertState = ({ children }) => {\r\n  const [state, dispatch] = useReducer(alertReducer, null);\r\n\r\n  const hide = () => dispatch({ type: HIDE_ALERT });\r\n  const show = (text, type = \"secondary\") => {\r\n    dispatch({\r\n      type: SHOW_ALERT,\r\n      payload: { type, text },\r\n    });\r\n  };\r\n  return (\r\n    <AlertContext.Provider value={{ hide, show, alert: state }}>\r\n      {children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n","import {\r\n  SEARCH_USERS,\r\n  GET_REPOS,\r\n  GET_USER,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n} from \"../types\";\r\n\r\nconst handlers = {\r\n  [SEARCH_USERS]: (state, action) => ({\r\n    ...state,\r\n    users: action.payload,\r\n    loading: false,\r\n  }),\r\n  [GET_REPOS]: (state, action) => ({\r\n    ...state,\r\n    repos: action.payload,\r\n    loading: false,\r\n  }),\r\n  [GET_USER]: (state, action) => ({\r\n    ...state,\r\n    user: action.payload,\r\n    loading: false,\r\n  }),\r\n  [SET_LOADING]: (state) => ({ ...state, loading: true }),\r\n  [CLEAR_USERS]: (state) => ({ ...state, users: [] }),\r\n  DEFAULT: (state) => state,\r\n};\r\n\r\nexport const githubReducer = (state, action) => {\r\n  const handler = handlers[action.type] || handlers.DEFAULT;\r\n  return handler(state, action);\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport { GithubContext } from \"./githubContext\";\r\nimport { githubReducer } from \"./githubReducer\";\r\nimport axios from \"axios\";\r\nimport {\r\n  SEARCH_USERS,\r\n  GET_USER,\r\n  GET_REPOS,\r\n  CLEAR_USERS,\r\n  SET_LOADING,\r\n} from \"../types\";\r\n\r\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\r\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET;\r\nconst withCreds = (url) => {\r\n  return `${url}client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}`;\r\n};\r\n\r\nexport const GithubState = ({ children }) => {\r\n  const initialState = {\r\n    user: {},\r\n    users: [],\r\n    loading: false,\r\n    repos: [],\r\n  };\r\n  const [state, dispatch] = useReducer(githubReducer, initialState);\r\n\r\n  const search = async (value) => {\r\n    setLoading();\r\n    const response = await axios(\r\n      withCreds(`https://api.github.com/search/users?q=${value}&`)\r\n    );\r\n    dispatch({ type: SEARCH_USERS, payload: response.data.items });\r\n  };\r\n\r\n  const getUser = async (name) => {\r\n    setLoading();\r\n    const response = await axios(\r\n      withCreds(`https://api.github.com/users/${name}?`)\r\n    );\r\n    dispatch({ type: GET_USER, payload: response.data });\r\n  };\r\n  const getRepos = async (name) => {\r\n    setLoading();\r\n\r\n    const response = await axios(\r\n      withCreds(`https://api.github.com/users/${name}/repos?per_page=5&`)\r\n    );\r\n    dispatch({ type: GET_REPOS, payload: response.data });\r\n  };\r\n\r\n  const clearUsers = () => {\r\n    dispatch({ type: CLEAR_USERS });\r\n  };\r\n\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n  const { user, users, repos, loading } = state;\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        setLoading,\r\n        getRepos,\r\n        search,\r\n        clearUsers,\r\n        getUser,\r\n        user,\r\n        users,\r\n        repos,\r\n        loading,\r\n      }}\r\n    >\r\n      {children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { NavBar } from \"./components/NavBar\";\nimport { Home } from \"./pages/Home\";\nimport { About } from \"./pages/About\";\nimport { Profile } from \"./pages/Profile\";\nimport { Alert } from \"./components/Alert\";\nimport { AlertState } from \"./context/alert/alertState\";\nimport { GithubState } from \"./context/gitHub/GithubState\";\n\nfunction App() {\n  return (\n    <GithubState>\n      <AlertState>\n        <BrowserRouter>\n          <NavBar />\n          <div className=\"container pt-4\">\n            <Alert alert={{ text: \"Teast alert\" }} />\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/profile/:name\" component={Profile} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </AlertState>\n    </GithubState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}